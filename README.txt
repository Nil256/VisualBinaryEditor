==================================================
=====          Visual Binary Editor          =====
==================================================
v0.1.0-alpha                             by Nil256

< 注意事項 >
このソフトウェアに、バイナリファイルを解析する機能はありません。
目的のバイナリファイルの構造が分かる場合にのみ使用できます。
また、バイナリファイル改造による不正行為を助長するものではありません。
悪用目的で使用しないでください。

--------------------------------------------------

< 使い方 >

= 起動 =
VisualBinaryEditor.exeから起動できます。

= 画面の見方 =
左側にある四角い枠: 現在のバイナリの構成(バイナリオーダー)を表しています。
右側のボタン群: バイナリエントリの追加、移動、削除ができます。

= バイナリファイルの生成 =
例えば、
binaryWriter.Write(true); // bool
binaryWriter.Write(254); // byte
binaryWriter.Write(15000); // int
で生成できるバイナリファイルを生成するとします。
右側にあるボタンから"bool", "byte", "int"の順にボタンを押します。
それぞれ"bool", "byte", "int"型のバイナリエントリが追加されます。
バイナリエントリをクリックすると、青色になり編集が可能になります。
バイナリエントリの
左にある数字は順番、Typeは型、Valueは値を表しています。
Nameはバイナリエントリの出力時には関係なく、その値が何を表しているのか
分かりやすくするためのメモ欄のようなものです。
"01 Type: bool" に "true"
"02 Type: byte" に "254"
"31 Type: int" に "15000"
と入力した後、メニューバーの「ファイル」->「名前を付けて保存」で
バイナリファイルを出力できます。
※バイナリファイルを出力するには最低でも１つバイナリエントリが必要です。

= バイナリファイルの読み込み =
例えば、バイナリファイルを
binaryReader.ReadByte();
binaryReader.ReadUint16();
binaryReader.ReadInt64();
と読み込みたいとします。
右側にあるボタンから"byte", "ushort", "long"の順にボタンを押します。
それぞれ"byte", "ushort", "long"型のバイナリエントリが追加されます。
追加されたら、メニューバーの「ファイル」->「開く」でファイルを開きます。
バイナリオーダーとバイナリファイルの構成が合っていれば正しく読み込めます。
(構成が間違っている場合でも、読み込むこと自体はできます。)

= Tips =
バイナリエントリの追加は、選択中のバイナリエントリの１つ下に追加されます。

※「バイナリエントリ」、「バイナリオーダー」は
 このソフトウェアで用いられる用語で正式なIT用語ではありません。

--------------------------------------------------

< ライセンス >
このソフトウェアは GNU General Public License v3.0 の下で提供されています。

--------------------------------------------------

< ソースコード >
ソースコードは以下のリンクにあります。
https://github.com/Nil256/VisualBinaryEditor
